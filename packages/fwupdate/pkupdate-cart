#!/bin/sh
#
# R Dowling 2/1/2008
#
# pkupdate-cart [-t]
# 
# pkupdate-cart checks if an installed cart has any package updates
# and then applies any updates that are needed.  An package update is
# in order if the version of the package on the cartridge is "greater"
# than the version stored in the meta.inf file of a package on the
# base unit.  The "greater" test is a simple numeric -gt test on the
# last part of the version number string.
#
# The optional -t flag tells pkupdate-cart to simply test for an update,
# and return 1 if one is found.  Thus we can:
#     if ! pkupdate-cart -t; then DO-UPDATE; fi
#
# A manifest file /Carts/updates/manifest.inf gives a list of packages
# their versions and where to find their meta.inf files
#
# The file manifest.inf gives information about packages available for
# installation, one package per line.  The format of the lines is
#    <directory>:<version>:<package>
# where <directory> is the directory where a meta.inf can be found,
# and <version> is the version number of the package,
# and <package> is a .lfp file found in /Cart/updates.
#
# This manifest file can be generated by 
#    lfpkg -a manifest /some/directory
#
# PERFORMANCE:
#   Got this down to .35 seconds for 4 updates on cart

# Check for -t or nothing
TEST="$1"

# Do not define this when we're sure it is OK
DEBUG=1

# helper function

# ensure external power or battery above 4500 millivolts
EXTERNAL_POWER=`cat /sys/devices/platform/lf1000-power/external`
BATTERY_VOLTAGE=`cat /sys/devices/platform/lf1000-power/voltage`
MIN_VOLTAGE=4500
check_power() {
        if [ $EXTERNAL_POWER = 0 -a $BATTERY_VOLTAGE -lt $MIN_VOLTAGE ]; then
                echo "Battery voltage too low, failing to install $PKG"
                exit 1
        fi
}

DOOM_FILE=/Didj/doom
touch_doom ()
{
	# Mark volume as in flux
	# Check if even need to touch doom
	if [ ! -e $DOOM_FILE ]; then
		touch $DOOM_FILE
	fi
}

remove_doom ()
{
	# Changes have ended, remove doom
	if [ -e $DOOM_FILE ]; then
		rm $DOOM_FILE
	fi
}

# Need access to /Cart; Give up quickly if not possible
CART=`cat /sys/devices/platform/lf1000-nand/cartridge`
if [ "$CART" = "none" ]; then
	# Quit early
	echo pkupdate-cart: no cart installed
	exit 0
fi
# Got here, a cart was installed.  Make sure it is already mounted
if ! grep /Cart /proc/mounts 2>&1 >/dev/null; then
	# Should never need this, but just in case....
	usbctl -d mass_storage -a disable > /dev/null
fi

CARTDIR=/Cart/updates
MANIFEST=$CARTDIR/manifest.inf

# Look for manifest file or fail
if [ ! -e $MANIFEST ]; then
	# No manifest; nothing to do
	echo pkupdate-cart: no $MANIFEST
	exit 0
fi

for line in `cat $MANIFEST`; do
	DIR=`echo $line | cut -d ':' -f 1`
	VER=`echo $line | cut -d ':' -f 2`
	# lfpkg is too slow...
	# TVER=`lfpkg -a ver $DIR 2>/dev/null`
	TVER=`grep -e "\<Version=" $DIR/meta.inf 2>/dev/null`
	# echo "DIR=$DIR VER=$VER PKG=$PKG TVER=$TVER"
	if ver "$VER" -gt "$TVER"; then
		if [ "X$TEST" != "X" ]; then
			exit 1;	# Test: only indicate that an update is needed
		fi
		PKG=`echo $line | cut -d ':' -f 3 | tr -d '\r'`
		if [ "$DEBUG" ]; then
			echo "Install $CARTDIR/$PKG version $VER over $TVER"
		fi
#		check_power
		touch_doom
		lfpkg -a install $CARTDIR/$PKG
		RESULT=$?
		if [ $RESULT != 0 ]; then
			echo "lfpkg -a install failed with exit code $RESULT";
			exit $RESULT;
		else
			echo "lfpkg -a install succeeded";
		fi
		lfpkg -a validate $CARTDIR/$PKG
		RESULT=$?
		if [ $RESULT != 0 ]; then
			echo "lfpkg -a validate failed with exit code $RESULT";
			exit $RESULT;
		else
			echo "lfpkg -a validate succeeded";
		fi
	else
		if [ "$DEBUG" -a "X$TEST" == "X" ]; then
			PKG=`echo $line | cut -d ':' -f 3 | tr -d '\r'`
			echo "Skip installing $CARTDIR/$PKG because version $VER -le $TVER"
		fi
	fi
done
remove_doom
exit 0
